<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zhang Chi - Front End Developer</title>
    <description>A blog about Front End Development</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 11 Sep 2016 00:48:55 +0800</pubDate>
    <lastBuildDate>Sun, 11 Sep 2016 00:48:55 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>jquery的attr方法和prop方法</title>
        <description>&lt;p&gt;尽管越来越多人已经不建议使用jquery，但jquery仍然是最普遍被使用的javascript库。下图是ponyfoo.com网站在今年初进行的一项名为“Javascript开发者调查”的调查数据。&lt;a href=&quot;https://ponyfoo.com/articles/javascript-developer-survey-results&quot;&gt;查看英文原文&lt;/a&gt;。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;../assets/img/jquery-use-chart.png&quot; alt=&quot;Javascript开发者调查-jquery库使用&quot; /&gt;&lt;/p&gt; &lt;p&gt;Jquery也在不但地迭代更新，不断进步。目前稳定版本已经更新到3.1.0版本。在使用刚刚Jquery的过程中，曾今有个遇到这样一个问题——&lt;/p&gt; &lt;h3 id=&quot;jqueryattrprop&quot;&gt;jquery的attr方法和prop方法有什么区别？&lt;/h3&gt; &lt;p&gt;在jQuery 1.6之前 ，&lt;code class=&quot;highlighter-rouge&quot;&gt;.attr()&lt;/code&gt;方法在取某些 attribute 的值时，会返回 property 的值，这就导致了结果的不一致。从 jQuery 1.6 开始， &lt;code class=&quot;highlighter-rouge&quot;&gt;.prop()&lt;/code&gt;方法 方法返回 property 的值,而 &lt;code class=&quot;highlighter-rouge&quot;&gt;.attr() &lt;/code&gt;方法返回 attributes 的值。例如, selectedIndex, tagName, nodeName, nodeType, ownerDocument, defaultChecked, 和 defaultSelected 应使用.&lt;code class=&quot;highlighter-rouge&quot;&gt;prop()&lt;/code&gt;方法进行取值或赋值。 在jQuery1.6之前，这些属性使用&lt;code class=&quot;highlighter-rouge&quot;&gt;.attr()&lt;/code&gt;方法取得，但是这并不是元素的attr属性。他们没有相应的属性（attributes），只有特性(property)。   对于非元素规定的特性的属性值，以及自定义的属性如以“data-”开头的属性都应该使用&lt;code class=&quot;highlighter-rouge&quot;&gt;attr()&lt;/code&gt;。在平时的应用过程中，html的表单中会经常错用attr()和prop（）而产生错误。、&lt;/p&gt; &lt;h4 id=&quot;attrprop&quot;&gt;表单中使用正确使用attr()和prop()示例&lt;/h4&gt; &lt;p&gt;在下面例子中点击select all fruit checkbox实现选中上面列表中的三个checkbox，再次点击取消选中。checkbox的checked属性就属于checkbox以及radio等表单元素特有的属性，点击select all fruit在浏览器的控制台中打出&lt;code class=&quot;highlighter-rouge&quot;&gt;$this.prop(&#39;checked&#39;)&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;$this.attr(&#39;checked&#39;)&lt;/code&gt;，发现分别输出true和undefined。再次点击这输出false和undefined, 可见，attr()是不能获取到checked属性的。虽然attr()不能获取到checked属性，却可以用来改变checked属性，但我不见你这里使用attr()来改变checkbox的checked属性，因为在一些低版本的浏览器中可能会出现兼容性问题。 同时，在需要使checkbox取消选中状态时，也不建议使用removeProp来实现，这样可能在一些浏览器中永久性删除checked属性而导致通过prop不能再添加上checked属性。&lt;/p&gt; &lt;p&gt;```html &amp;lt;!DOCTYPE html&amp;gt;&lt;/p&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;jquery-attr-prop&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;jquery的attr()方法和prop()方法&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; /&gt;apple&lt;/label&gt;&lt;/li&gt; &lt;li&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; /&gt;orange&lt;/label&gt;&lt;/li&gt; &lt;li&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; /&gt;banana&lt;/label&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;label&gt;&lt;input type=&quot;checkbox&quot; /&gt;selete all fruit&lt;/label&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;./assets/img/on-img.svg&quot; alt=&quot;&quot; width=&quot;200px&quot; height=&quot;50px&quot; /&gt;&lt;/p&gt; &lt;script src=&quot;./node_modules/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; $(&#39;p input&#39;).change(function(event) { var $this...</description>
        <pubDate>Fri, 09 Sep 2016 00:00:00 +0800</pubDate>
        <link>/jquery%E7%9A%84attr%E6%96%B9%E6%B3%95%E5%92%8Cprop%E6%96%B9%E6%B3%95/</link>
        <guid isPermaLink="true">/jquery%E7%9A%84attr%E6%96%B9%E6%B3%95%E5%92%8Cprop%E6%96%B9%E6%B3%95/</guid>
        
        <category>jquery</category>
        
        
        <category>html-css</category>
        
      </item>
    
      <item>
        <title>学习node+mongodb过程中express4引发的问题</title>
        <description>&lt;p&gt;在当前的node学习资源中，大部分都是基于express3.x来讲解的，而express已经进入4.x时代（Express是一个基于 Node.js 平台，快速、开放、极简的 web 开发框架）。&lt;/p&gt;

&lt;h3 id=&quot;express4&quot;&gt;Express4不再依赖中间件&lt;/h3&gt;

&lt;p&gt;Express 4 不再依赖 Connect，并且从核心中移除了所有内建的中间件，这意味着 Express 现在是一个不依赖路由和中间件的 Web 框架。&lt;/p&gt;

&lt;p&gt;随着内建的中间件被移除，你必须显式添加所有依赖的中间件来运行你的应用，简单来说需要以下步骤：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装模块：npm install –save 模块名称&lt;/li&gt;
  &lt;li&gt;在你的应用中，使用这个模块： require( 模块名称 )&lt;/li&gt;
  &lt;li&gt;基于模块的文档来使用模块&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里举个例子，bodyParser和static中间件的使用&lt;/p&gt;

&lt;p&gt;```javascript
//express3.x
app.use(express.bodyParser());
app.use(express.static(path.join(__dirname, ‘/bower_components’)));&lt;/p&gt;

&lt;p&gt;//express4.x
var bodyParser = require(‘body-parser’);
var serveStatic = require(‘serve-static’);&lt;/p&gt;

&lt;p&gt;app.use(require(‘body-parser’).urlencoded({extended: true}));
app.use(bodyParser.json());
app.use(serveStatic(__dirname + ‘/bower_components’));
//注意，dirname前面是2个下划线，
```&lt;/p&gt;

&lt;h4 id=&quot;express-3--express-4-httpdaringfireballnetprojectsmarkdownsyntax&quot;&gt;Express 3 中的中间件中对应 Express 4 中的模块可查看&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;这个网站&lt;/a&gt;。&lt;/h4&gt;

&lt;h3 id=&quot;appuse-&quot;&gt;app.use 可接受参数&lt;/h3&gt;

&lt;p&gt;在 Express 4 中，现在你可以使用带有一个可变参数的路径来加载中间件，并且从路由处理器中读取参数的值，例如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;javascript
app.use(&#39;/book/:id&#39;,function(req,res,next){
   console.log(&#39;ID:&#39;,req.params.id);
   next();
})
&lt;/code&gt;
#### 另外Express4.x还有很多新的特性和改变，如新加入express.router类，不再需要http模块来启动，直接是使用app.listen()就可启动服务，app.configure被移除等等，具体可以查看&lt;a href=&quot;[http://www.expressjs.com.cn/4x/api.html](http://www.expressjs.com.cn/4x/api.html)&quot;&gt;express4.x中文文档&lt;/a&gt;。&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Dec 2015 00:00:00 +0800</pubDate>
        <link>/%E5%AD%A6%E4%B9%A0node+mongodb%E8%BF%87%E7%A8%8B%E4%B8%ADexpress4%E5%BC%95%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</link>
        <guid isPermaLink="true">/%E5%AD%A6%E4%B9%A0node+mongodb%E8%BF%87%E7%A8%8B%E4%B8%ADexpress4%E5%BC%95%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
        
        <category>express</category>
        
        
        <category>mean-stack</category>
        
      </item>
    
      <item>
        <title>学习使用jekyll搭建博客</title>
        <description>&lt;p&gt;前端时间我学习了下happypeter老师的GitHub课程，他最后提到了GitHub创建博客的方法，不过仅仅只是粗略了讲了下，并没有提到jekyll的任何内容。但我抱着仅有的好奇心，看了几篇关于jekyll的博客之后进行了jekyll的初步尝试，得到一些经验与各位交流下，希望能为新手提供部分参考。&lt;/p&gt;

&lt;h3 id=&quot;github&quot;&gt;创建GitHub博客项目&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;个人或团队的项目名为：yourname.github.io , 可以通过setting来自动生成模板&lt;/li&gt;
  &lt;li&gt;项目博客的项目则可为项目添加gt-pages分支来创建博客，&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jekyll&quot;&gt;搭建jekyll平台环境&lt;/h3&gt;

&lt;p&gt;Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown （或者 Textile） 以及 Liquid转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。&lt;/p&gt;

&lt;p&gt;下面的在window上（我使用的是win10）主要步骤（参考自一位印度大神Madhur Ahuja的博客）。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;安装Ruby,&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用rubyinstall安装：下载地址 http://rubyinstaller.org/downloads/&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;安装DEVELOPMENT KIT，&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;根据自己的系统版本选选择，我下的是DevKit-mingw64-64-4.7.2-20130224-1432-sfx.exe，下载地址同上
在cmd或powershell上运行ruby dk.rb init进行初始化，然后运行ruby dk.rb install安装&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;安装jekyll&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;终于来到核心步骤，使用gem安装jekyll，运行gem install jekyll即可进行安装，但是这里有个Madhur Ahuja没有提到的坑——gem使用的是asw服务器在国内会出现fetchError也就是连接不到服务器，所以下载不了。不过有gem使用经验的人（如使用gem下载sass或rails的过程中也会出现这一问题），早就有了解决办法——使用淘宝团队的ruby镜像服务器来替代&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/
$ gem sources -l
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;jekyll-1&quot;&gt;使用jekyll开始博客项目&lt;/h3&gt;

&lt;p&gt;在安装完jekyll后就可以开始建博客项目了，在你的工作目录下运行jekyll new yourBlogName 自动生成了一个博客项目，然后切换的yourBlogName目录下运行jekyll serve就可以启动jekyll自带的服务器测试博客了，测试地址为localhost:4000/&lt;/p&gt;

&lt;p&gt;然后你就可以在_post目录下新建md文档写博客了，有关jekyll配置文件可以参考jekyll的文档，中文版见 http://jekyll.bootcss.com/docs/&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2015 00:00:00 +0800</pubDate>
        <link>/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
        <guid isPermaLink="true">/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8jekyll%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
        
        <category>jekyll</category>
        
        
        <category>build-blog</category>
        
      </item>
    
  </channel>
</rss>
